#define P_RUN    1        // プロセスは実行可能または実行中
#define P_WAIT   2        // プロセスは待ち状態
#define P_ZOMBIE 3        // プロセスは実行終了

// プロセスコントロールブロック(PCB)
//   優先度は値が小さいほど優先度が高い
struct PCB {              // PCB を表す構造体
  int sp;                 // コンテキスト(他の CPU レジスタと PSW は
                          //              プロセスのカーネルスタックに置く)
  int pid;                // プロセス番号
  int stat;               // プロセスの状態
  int nice;               // プロセスの本来優先度
  int enice;              // プロセスの実質優先度(将来用)
  int idx;                // この PCB のプロセステーブル上のインデクス

  // プロセスのイベント用セマフォ
  int evtCnt;             // カウンタ(>0:sleep中, ==-1:wait中, ==0:未使用)
  int evtSem;             // イベント用セマフォの番号
 
  // プロセスのアドレス空間(text, data, bss, ...)
  char[] memBase;         // プロセスのメモリ領域のアドレス
  int memLen;             // プロセスのメモリ領域の長さ
    
  // プロセスの親子関係の情報
  PCB parent;             // 親プロセスへのポインタ
  int exitStat;           // プロセスの終了ステータス

  // オープン中のファイル一覧
  int[] fds;              // オープン中のファイル一覧
    
  // プロセスは重連結環状リストで管理
  PCB prev;               // PCB リスト(前へのポインタ)
  PCB next;               // PCB リスト(次へのポインタ)
  int magic;              // スタックオーバーフローを検知
};
